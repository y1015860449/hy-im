// Code generated by protoc-gen-go. DO NOT EDIT.
// source: im.pub.proto

package im_app

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImCmd int32

const (
	ImCmd_cmd_unknown               ImCmd = 0
	ImCmd_cmd_heartbeat             ImCmd = 1
	ImCmd_cmd_heartbeat_ack         ImCmd = 2
	ImCmd_cmd_login                 ImCmd = 2049
	ImCmd_cmd_login_ack             ImCmd = 2050
	ImCmd_cmd_logout                ImCmd = 2051
	ImCmd_cmd_logout_ack            ImCmd = 2052
	ImCmd_cmd_kick_out              ImCmd = 2054
	ImCmd_cmd_group_msg             ImCmd = 4097
	ImCmd_cmd_group_msg_ack         ImCmd = 4098
	ImCmd_cmd_group_msg_deliver     ImCmd = 4100
	ImCmd_cmd_group_msg_deliver_ack ImCmd = 4099
	// 打开
	ImCmd_cmd_group_open             ImCmd = 4101
	ImCmd_cmd_group_open_ack         ImCmd = 4102
	ImCmd_cmd_group_open_deliver     ImCmd = 4104
	ImCmd_cmd_group_open_deliver_ack ImCmd = 4103
	// 加入
	ImCmd_cmd_group_join             ImCmd = 4105
	ImCmd_cmd_group_join_ack         ImCmd = 4106
	ImCmd_cmd_group_join_deliver     ImCmd = 4108
	ImCmd_cmd_group_join_deliver_ack ImCmd = 4107
	// 移除
	ImCmd_cmd_group_remove             ImCmd = 4109
	ImCmd_cmd_group_remove_ack         ImCmd = 4110
	ImCmd_cmd_group_remove_deliver     ImCmd = 4112
	ImCmd_cmd_group_remove_deliver_ack ImCmd = 4111
	// 退出
	ImCmd_cmd_group_quit             ImCmd = 4113
	ImCmd_cmd_group_quit_ack         ImCmd = 4114
	ImCmd_cmd_group_quit_deliver     ImCmd = 4116
	ImCmd_cmd_group_quit_deliver_ack ImCmd = 4115
	// 关闭
	ImCmd_cmd_group_close              ImCmd = 4117
	ImCmd_cmd_group_close_ack          ImCmd = 4118
	ImCmd_cmd_group_close_deliver      ImCmd = 4120
	ImCmd_cmd_group_close_deliver_ack  ImCmd = 4119
	ImCmd_cmd_p2p_msg                  ImCmd = 8193
	ImCmd_cmd_p2p_msg_ack              ImCmd = 8194
	ImCmd_cmd_p2p_msg_deliver          ImCmd = 8196
	ImCmd_cmd_p2p_msg_deliver_ack      ImCmd = 8195
	ImCmd_cmd_p2p_msg_notify           ImCmd = 8198
	ImCmd_cmd_p2p_msg_notify_ack       ImCmd = 8197
	ImCmd_cmd_p2p_msg_read             ImCmd = 8199
	ImCmd_cmd_p2p_msg_read_ack         ImCmd = 8200
	ImCmd_cmd_p2p_msg_read_deliver     ImCmd = 8202
	ImCmd_cmd_p2p_msg_read_deliver_ack ImCmd = 8201
)

var ImCmd_name = map[int32]string{
	0:    "cmd_unknown",
	1:    "cmd_heartbeat",
	2:    "cmd_heartbeat_ack",
	2049: "cmd_login",
	2050: "cmd_login_ack",
	2051: "cmd_logout",
	2052: "cmd_logout_ack",
	2054: "cmd_kick_out",
	4097: "cmd_group_msg",
	4098: "cmd_group_msg_ack",
	4100: "cmd_group_msg_deliver",
	4099: "cmd_group_msg_deliver_ack",
	4101: "cmd_group_open",
	4102: "cmd_group_open_ack",
	4104: "cmd_group_open_deliver",
	4103: "cmd_group_open_deliver_ack",
	4105: "cmd_group_join",
	4106: "cmd_group_join_ack",
	4108: "cmd_group_join_deliver",
	4107: "cmd_group_join_deliver_ack",
	4109: "cmd_group_remove",
	4110: "cmd_group_remove_ack",
	4112: "cmd_group_remove_deliver",
	4111: "cmd_group_remove_deliver_ack",
	4113: "cmd_group_quit",
	4114: "cmd_group_quit_ack",
	4116: "cmd_group_quit_deliver",
	4115: "cmd_group_quit_deliver_ack",
	4117: "cmd_group_close",
	4118: "cmd_group_close_ack",
	4120: "cmd_group_close_deliver",
	4119: "cmd_group_close_deliver_ack",
	8193: "cmd_p2p_msg",
	8194: "cmd_p2p_msg_ack",
	8196: "cmd_p2p_msg_deliver",
	8195: "cmd_p2p_msg_deliver_ack",
	8198: "cmd_p2p_msg_notify",
	8197: "cmd_p2p_msg_notify_ack",
	8199: "cmd_p2p_msg_read",
	8200: "cmd_p2p_msg_read_ack",
	8202: "cmd_p2p_msg_read_deliver",
	8201: "cmd_p2p_msg_read_deliver_ack",
}

var ImCmd_value = map[string]int32{
	"cmd_unknown":                  0,
	"cmd_heartbeat":                1,
	"cmd_heartbeat_ack":            2,
	"cmd_login":                    2049,
	"cmd_login_ack":                2050,
	"cmd_logout":                   2051,
	"cmd_logout_ack":               2052,
	"cmd_kick_out":                 2054,
	"cmd_group_msg":                4097,
	"cmd_group_msg_ack":            4098,
	"cmd_group_msg_deliver":        4100,
	"cmd_group_msg_deliver_ack":    4099,
	"cmd_group_open":               4101,
	"cmd_group_open_ack":           4102,
	"cmd_group_open_deliver":       4104,
	"cmd_group_open_deliver_ack":   4103,
	"cmd_group_join":               4105,
	"cmd_group_join_ack":           4106,
	"cmd_group_join_deliver":       4108,
	"cmd_group_join_deliver_ack":   4107,
	"cmd_group_remove":             4109,
	"cmd_group_remove_ack":         4110,
	"cmd_group_remove_deliver":     4112,
	"cmd_group_remove_deliver_ack": 4111,
	"cmd_group_quit":               4113,
	"cmd_group_quit_ack":           4114,
	"cmd_group_quit_deliver":       4116,
	"cmd_group_quit_deliver_ack":   4115,
	"cmd_group_close":              4117,
	"cmd_group_close_ack":          4118,
	"cmd_group_close_deliver":      4120,
	"cmd_group_close_deliver_ack":  4119,
	"cmd_p2p_msg":                  8193,
	"cmd_p2p_msg_ack":              8194,
	"cmd_p2p_msg_deliver":          8196,
	"cmd_p2p_msg_deliver_ack":      8195,
	"cmd_p2p_msg_notify":           8198,
	"cmd_p2p_msg_notify_ack":       8197,
	"cmd_p2p_msg_read":             8199,
	"cmd_p2p_msg_read_ack":         8200,
	"cmd_p2p_msg_read_deliver":     8202,
	"cmd_p2p_msg_read_deliver_ack": 8201,
}

func (x ImCmd) String() string {
	return proto.EnumName(ImCmd_name, int32(x))
}

func (ImCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_419a8c3136d42e2a, []int{0}
}

type ImErrCode int32

const (
	ImErrCode_err_unknown          ImErrCode = 0
	ImErrCode_err_success          ImErrCode = 61440
	ImErrCode_err_server_except    ImErrCode = 61441
	ImErrCode_err_param_except     ImErrCode = 61442
	ImErrCode_err_msg_empty        ImErrCode = 61443
	ImErrCode_err_msg_except       ImErrCode = 61444
	ImErrCode_err_user_written_off ImErrCode = 61445
	ImErrCode_err_user_freeze      ImErrCode = 61446
	ImErrCode_err_user_except      ImErrCode = 61447
	ImErrCode_err_user_visitor     ImErrCode = 61448
	ImErrCode_err_login_auth       ImErrCode = 61697
	ImErrCode_err_login_kick_out   ImErrCode = 61698
)

var ImErrCode_name = map[int32]string{
	0:     "err_unknown",
	61440: "err_success",
	61441: "err_server_except",
	61442: "err_param_except",
	61443: "err_msg_empty",
	61444: "err_msg_except",
	61445: "err_user_written_off",
	61446: "err_user_freeze",
	61447: "err_user_except",
	61448: "err_user_visitor",
	61697: "err_login_auth",
	61698: "err_login_kick_out",
}

var ImErrCode_value = map[string]int32{
	"err_unknown":          0,
	"err_success":          61440,
	"err_server_except":    61441,
	"err_param_except":     61442,
	"err_msg_empty":        61443,
	"err_msg_except":       61444,
	"err_user_written_off": 61445,
	"err_user_freeze":      61446,
	"err_user_except":      61447,
	"err_user_visitor":     61448,
	"err_login_auth":       61697,
	"err_login_kick_out":   61698,
}

func (x ImErrCode) String() string {
	return proto.EnumName(ImErrCode_name, int32(x))
}

func (ImErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_419a8c3136d42e2a, []int{1}
}

func init() {
	proto.RegisterEnum("im.app.ImCmd", ImCmd_name, ImCmd_value)
	proto.RegisterEnum("im.app.ImErrCode", ImErrCode_name, ImErrCode_value)
}

func init() { proto.RegisterFile("im.pub.proto", fileDescriptor_419a8c3136d42e2a) }

var fileDescriptor_419a8c3136d42e2a = []byte{
	// 605 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xcb, 0x52, 0xdb, 0x3c,
	0x14, 0xc7, 0xbf, 0x0f, 0x4f, 0x99, 0x72, 0x0a, 0xe4, 0xe4, 0x90, 0x70, 0x6f, 0xab, 0x6e, 0x59,
	0xb0, 0x68, 0x5f, 0xc0, 0x33, 0x4c, 0x17, 0x3c, 0x45, 0xc6, 0x38, 0x0a, 0xb8, 0xc1, 0x96, 0x2b,
	0xcb, 0x50, 0xba, 0x6a, 0xb8, 0x84, 0x4b, 0xef, 0xf7, 0x6e, 0xfa, 0x20, 0x7d, 0x9b, 0x0c, 0x4f,
	0xd2, 0xf1, 0x71, 0x14, 0x63, 0x15, 0x96, 0xf9, 0xfd, 0xce, 0xd1, 0xff, 0xc8, 0x52, 0x04, 0xb3,
	0x51, 0xbc, 0x99, 0xe6, 0x3b, 0x9b, 0xa9, 0x56, 0x46, 0xd1, 0x74, 0x14, 0x6f, 0x06, 0x69, 0xba,
	0xf1, 0xe7, 0x3e, 0xdc, 0xdb, 0x8e, 0xb7, 0xe2, 0x2e, 0x35, 0xe0, 0x41, 0x18, 0x77, 0x3b, 0x79,
	0xd2, 0x4f, 0xd4, 0x61, 0x82, 0xff, 0x51, 0x13, 0xe6, 0x0a, 0xb0, 0x27, 0x03, 0x6d, 0x76, 0x64,
	0x60, 0xf0, 0x7f, 0x6a, 0x43, 0xb3, 0x86, 0x3a, 0x41, 0xd8, 0xc7, 0x29, 0x9a, 0x87, 0x99, 0x02,
	0xef, 0xab, 0xdd, 0x28, 0xc1, 0x01, 0x12, 0x95, 0x9d, 0xfc, 0x9b, 0x4b, 0x8e, 0x91, 0x1a, 0x00,
	0x63, 0xa6, 0x72, 0x83, 0x27, 0x48, 0x0b, 0x30, 0x5f, 0x01, 0xae, 0x3a, 0x45, 0x6a, 0xc2, 0x6c,
	0x01, 0xfb, 0x51, 0xd8, 0xef, 0x14, 0x75, 0xc3, 0xc9, 0x62, 0xbb, 0x5a, 0xe5, 0x69, 0x27, 0xce,
	0x76, 0x71, 0x20, 0x68, 0xb1, 0x9c, 0x63, 0xc2, 0xca, 0x10, 0x41, 0xab, 0xd0, 0xae, 0xf3, 0xae,
	0xdc, 0x8f, 0x0e, 0xa4, 0xc6, 0x53, 0x41, 0x8f, 0x60, 0xe5, 0x56, 0xc7, 0xbd, 0x27, 0xc2, 0xce,
	0x53, 0x7a, 0x95, 0xca, 0x04, 0xcf, 0x04, 0x2d, 0x01, 0xd5, 0x21, 0x57, 0x0f, 0x05, 0xad, 0xc1,
	0xa2, 0x23, 0x6c, 0xd4, 0x85, 0xa0, 0xc7, 0xb0, 0x7a, 0xbb, 0xe4, 0xee, 0x73, 0x27, 0xeb, 0x85,
	0x8a, 0x12, 0xbc, 0x74, 0xb2, 0x0a, 0xc8, 0xd5, 0x57, 0x4e, 0x16, 0x0b, 0x9b, 0xf5, 0xce, 0xc9,
	0xba, 0x29, 0xb9, 0xfb, 0xad, 0xa0, 0x36, 0x60, 0x55, 0xa0, 0x65, 0xac, 0x0e, 0x24, 0xbe, 0x17,
	0xb4, 0x02, 0x2d, 0x17, 0x73, 0xc7, 0x07, 0x41, 0x0f, 0x61, 0xf9, 0x1f, 0x65, 0x13, 0x3f, 0x09,
	0x7a, 0x02, 0xeb, 0x77, 0x69, 0x5e, 0xe1, 0xa3, 0xb3, 0xbf, 0x97, 0x79, 0x64, 0xf0, 0xb3, 0xb3,
	0xbf, 0x02, 0x72, 0xf5, 0x17, 0x67, 0x7f, 0x2c, 0x6c, 0xda, 0x37, 0x67, 0x7f, 0x37, 0x25, 0x77,
	0x7f, 0x15, 0xd4, 0x82, 0x46, 0x55, 0x10, 0xee, 0xab, 0x4c, 0xe2, 0x77, 0x41, 0xcb, 0xb0, 0xe0,
	0x50, 0xae, 0xff, 0x21, 0x68, 0x1d, 0x96, 0x5c, 0x63, 0xe3, 0x7e, 0x09, 0x12, 0xb0, 0x76, 0x87,
	0xe5, 0xfe, 0x9f, 0x82, 0xb0, 0xfc, 0x9f, 0xa4, 0x4f, 0xc7, 0xb7, 0xd1, 0xb7, 0x13, 0x8c, 0x49,
	0x79, 0x17, 0x7d, 0x3b, 0x81, 0xa5, 0x93, 0x9b, 0xe8, 0xdb, 0x09, 0x1c, 0x53, 0xde, 0x43, 0xdf,
	0x7e, 0x26, 0x6b, 0x13, 0x65, 0xa2, 0xde, 0x11, 0x0e, 0x7d, 0xfb, 0x99, 0xea, 0x82, 0xbb, 0xce,
	0x7c, 0x7b, 0xca, 0x56, 0x6a, 0x19, 0x74, 0xf1, 0xdc, 0xb7, 0xa7, 0x7c, 0x13, 0x73, 0xc7, 0x85,
	0x6f, 0x4f, 0xb9, 0xa6, 0xec, 0x90, 0x57, 0xbe, 0x3d, 0xe5, 0xdb, 0x34, 0xaf, 0x70, 0xe9, 0x6f,
	0xfc, 0x9e, 0x82, 0x99, 0xed, 0xf8, 0xb9, 0xd6, 0x5b, 0xaa, 0x2b, 0x8b, 0xf7, 0x43, 0x6a, 0x5d,
	0x7b, 0x3f, 0x18, 0x64, 0x79, 0x18, 0xca, 0x2c, 0xc3, 0x37, 0x23, 0x8f, 0x96, 0xa0, 0xc9, 0x48,
	0xea, 0x62, 0x19, 0xf9, 0x2a, 0x94, 0xa9, 0xc1, 0xc1, 0xc8, 0xa3, 0x45, 0xc0, 0x42, 0xa4, 0x81,
	0x0e, 0x62, 0xcb, 0x8f, 0x47, 0x1e, 0x2d, 0xc0, 0x5c, 0xc1, 0x8b, 0x09, 0x64, 0x9c, 0x9a, 0x23,
	0x3c, 0x19, 0x79, 0xd4, 0x82, 0xf9, 0x09, 0x2c, 0x4b, 0x4f, 0x47, 0x1e, 0xad, 0x42, 0x8b, 0xf3,
	0x33, 0xa9, 0x3b, 0x87, 0x3a, 0x32, 0x46, 0x26, 0x1d, 0xd5, 0xeb, 0xe1, 0xd9, 0xc8, 0xa3, 0x36,
	0x34, 0x26, 0xae, 0xa7, 0xa5, 0x7c, 0x2d, 0x71, 0xe8, 0xe0, 0xf1, 0x4a, 0xe7, 0xd5, 0x30, 0x8c,
	0x0f, 0xa2, 0x2c, 0x32, 0x4a, 0xe3, 0x45, 0x95, 0x3b, 0x7e, 0xd6, 0x72, 0xb3, 0x87, 0x83, 0x6b,
	0x8f, 0x96, 0x81, 0x2a, 0x3a, 0x79, 0xb8, 0x8e, 0xaf, 0xbd, 0x9d, 0x69, 0x7e, 0x6a, 0x9f, 0xfd,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x92, 0x31, 0x31, 0x7a, 0x05, 0x00, 0x00,
}
